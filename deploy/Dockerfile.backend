# Dockerfile cho Backend (NestJS)
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY backend-search/package*.json ./

# Install dependencies (including dev dependencies for build)
RUN npm ci && npm cache clean --force

# Copy source code (excluding node_modules and other unnecessary files)
COPY backend-search/src ./src
COPY backend-search/scripts ./scripts
COPY backend-search/tsconfig*.json ./
COPY backend-search/nest-cli.json ./
#COPY backend-search/.env ./

# Build the application
RUN npm run build

# Production stage
FROM node:20-alpine AS production

WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
  adduser -S nestjs -u 1001

# Copy package files
COPY backend-search/package*.json ./
COPY backend-search/src ./src
COPY backend-search/scripts ./scripts

# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist

# Create uploads directory with correct permissions
RUN mkdir -p uploads && \
  chown -R nestjs:nodejs uploads && \
  chmod -R 755 uploads

# Switch to non-root user
USER nestjs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://0.0.0.0:3000/api || exit 1

# Start the application
CMD ["node", "dist/src/main"]
