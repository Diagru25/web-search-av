import {
  IsString,
  IsDateString,
  IsOptional,
  IsNumber,
  IsInt,
  Min,
  IsMongoId,
} from 'class-validator';
import { Transform } from 'class-transformer';

export class CreateMalwareDto {
  @IsString()
  sampleName: string;

  @IsOptional()
  @IsString()
  md5?: string;

  @IsMongoId()
  collectionUnit: string;

  @IsDateString()
  collectionDate: string;

  @IsOptional()
  @IsString()
  description?: string;

  @IsOptional()
  @IsNumber()
  fileSize?: number;

  @IsOptional()
  @IsString()
  originalName?: string;
}

export class UpdateMalwareDto {
  @IsOptional()
  @IsString()
  sampleName?: string;

  @IsOptional()
  @IsString()
  md5?: string;

  @IsOptional()
  @IsMongoId()
  collectionUnit?: string;

  @IsOptional()
  @IsDateString()
  collectionDate?: string;

  @IsOptional()
  @IsString()
  description?: string;

  @IsOptional()
  @IsNumber()
  fileSize?: number;

  @IsOptional()
  @IsString()
  originalName?: string;
}

export class SearchMalwareDto {
  @IsOptional()
  @IsString()
  sampleName?: string;

  @IsOptional()
  @IsString()
  md5?: string;

  @IsOptional()
  @IsMongoId()
  collectionUnit?: string;

  @IsOptional()
  @IsDateString()
  fromDate?: string;

  @IsOptional()
  @IsDateString()
  toDate?: string;

  @IsOptional()
  @Transform(({ value }) => parseInt(value))
  @IsInt()
  @Min(1)
  pageIndex?: number = 1;

  @IsOptional()
  @Transform(({ value }) => parseInt(value))
  @IsInt()
  @Min(1)
  pageSize?: number = 10;
}

export interface PaginatedResponse<T> {
  items: T[];
  total: number;
  pageIndex: number;
  pageSize: number;
}
