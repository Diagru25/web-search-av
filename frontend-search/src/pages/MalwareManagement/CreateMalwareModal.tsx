import React from "react";
import {
  Modal,
  Form,
  Input,
  Select,
  DatePicker,
  Upload,
  Button,
  Space,
} from "antd";
import { UploadOutlined } from "@ant-design/icons";
import type { Dayjs } from "dayjs";
import type { FormInstance } from "antd/es/form";
import type { CollectionUnitItem } from "../../services/api";

const { Option } = Select;

export interface CreateFormValues {
  sampleName: string;
  md5?: string;
  collectionUnit: string;
  collectionDate: Dayjs;
  description?: string;
  file: { file: File };
}

interface CreateMalwareModalProps {
  visible: boolean;
  onCancel: () => void;
  onSubmit: (values: CreateFormValues) => Promise<void>;
  form: FormInstance<CreateFormValues>;
  collectionUnits: CollectionUnitItem[];
}

const CreateMalwareModal: React.FC<CreateMalwareModalProps> = ({
  visible,
  onCancel,
  onSubmit,
  form,
  collectionUnits,
}) => {
  const handleCancel = () => {
    form.resetFields();
    onCancel();
  };

  return (
    <Modal
      title="Thêm mã độc mới"
      open={visible}
      onCancel={handleCancel}
      footer={null}
      width={600}
    >
      <Form form={form} layout="vertical" onFinish={onSubmit}>
        <Form.Item
          name="sampleName"
          label="Tên mẫu"
          rules={[{ required: true, message: "Vui lòng nhập tên mẫu!" }]}
        >
          <Input placeholder="Nhập tên mẫu mã độc" />
        </Form.Item>

        <Form.Item name="md5" label="MD5 Hash (tùy chọn)">
          <Input
            placeholder="MD5 sẽ được tính tự động nếu không nhập"
            disabled
          />
        </Form.Item>

        <Form.Item
          name="collectionUnit"
          label="Đơn vị thu thập"
          rules={[
            { required: true, message: "Vui lòng chọn đơn vị thu thập!" },
          ]}
        >
          <Select
            placeholder="Chọn đơn vị thu thập"
            showSearch
            optionFilterProp="children"
            filterOption={(input, option) =>
              (option?.children as unknown as string)
                ?.toLowerCase()
                .includes(input.toLowerCase())
            }
          >
            {collectionUnits.map((unit) => (
              <Option key={unit._id} value={unit._id}>
                {unit.name}
              </Option>
            ))}
          </Select>
        </Form.Item>

        <Form.Item
          name="collectionDate"
          label="Ngày thu thập"
          rules={[{ required: true, message: "Vui lòng chọn ngày thu thập!" }]}
        >
          <DatePicker style={{ width: "100%" }} format="DD/MM/YYYY" />
        </Form.Item>

        <Form.Item name="description" label="Mô tả">
          <Input.TextArea rows={3} placeholder="Mô tả về mã độc" />
        </Form.Item>

        <Form.Item
          name="file"
          label="File mã độc"
          rules={[{ required: true, message: "Vui lòng chọn file!" }]}
        >
          <Upload
            maxCount={1}
            beforeUpload={() => false} // Prevent auto upload
          >
            <Button icon={<UploadOutlined />}>Chọn file</Button>
          </Upload>
        </Form.Item>

        <Form.Item>
          <Space>
            <Button type="primary" htmlType="submit">
              Tạo mã độc
            </Button>
            <Button onClick={handleCancel}>Hủy</Button>
          </Space>
        </Form.Item>
      </Form>
    </Modal>
  );
};

export default CreateMalwareModal;
