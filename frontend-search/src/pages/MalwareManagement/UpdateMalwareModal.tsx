import React from "react";
import {
  Modal,
  Form,
  Input,
  Select,
  DatePicker,
  Upload,
  Button,
  Space,
  Card,
  Typography,
  message,
} from "antd";
import { UploadOutlined, DownloadOutlined } from "@ant-design/icons";
import type { Dayjs } from "dayjs";
import type { FormInstance } from "antd/es/form";
import type { CollectionUnitItem, MalwareItem } from "../../services/api";
import { malwareAPI } from "../../services/api";

const { Option } = Select;
const { Text } = Typography;

export interface UpdateFormValues {
  sampleName: string;
  collectionUnit: string;
  collectionDate: Dayjs;
  description?: string;
  file?: { file: File };
}

interface UpdateMalwareModalProps {
  visible: boolean;
  onCancel: () => void;
  onSubmit: (values: UpdateFormValues) => Promise<void>;
  form: FormInstance<UpdateFormValues>;
  collectionUnits: CollectionUnitItem[];
  currentMalware: MalwareItem | null;
}

const UpdateMalwareModal: React.FC<UpdateMalwareModalProps> = ({
  visible,
  onCancel,
  onSubmit,
  form,
  collectionUnits,
  currentMalware,
}) => {
  const handleCancel = () => {
    form.resetFields();
    onCancel();
  };

  const handleDownload = async () => {
    if (!currentMalware) return;

    try {
      const blob = await malwareAPI.download(currentMalware._id);
      const url = window.URL.createObjectURL(blob);
      const link = document.createElement("a");
      link.href = url;
      link.download = currentMalware.originalName || currentMalware.sampleName;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      window.URL.revokeObjectURL(url);
      message.success("Tải xuống thành công!");
    } catch {
      message.error("Lỗi khi tải xuống file");
    }
  };

  return (
    <Modal
      title="Chỉnh sửa mã độc"
      open={visible}
      onCancel={handleCancel}
      footer={null}
      width={600}
    >
      <Form form={form} layout="vertical" onFinish={onSubmit}>
        <Form.Item
          name="sampleName"
          label="Tên mẫu"
          rules={[{ required: true, message: "Vui lòng nhập tên mẫu!" }]}
        >
          <Input placeholder="Nhập tên mẫu mã độc" />
        </Form.Item>

        {/* Current file info */}
        {currentMalware && (
          <Card
            title="File hiện tại"
            size="small"
            style={{ marginBottom: 16 }}
            extra={
              <Button
                type="link"
                icon={<DownloadOutlined />}
                onClick={handleDownload}
              >
                Tải xuống
              </Button>
            }
          >
            <Space direction="vertical" size="small" style={{ width: "100%" }}>
              <Text>
                <strong>Tên file:</strong>{" "}
                {currentMalware.originalName || currentMalware.sampleName}
              </Text>
              <Text>
                <strong>MD5:</strong> {currentMalware.md5}
              </Text>
              <Text>
                <strong>Kích thước:</strong>{" "}
                {currentMalware.fileSize
                  ? `${(currentMalware.fileSize / 1024).toFixed(1)} KB`
                  : "N/A"}
              </Text>
            </Space>
          </Card>
        )}

        <Form.Item
          name="file"
          label="Thay đổi file (tùy chọn)"
          valuePropName="file"
        >
          <Upload beforeUpload={() => false} maxCount={1} accept="*">
            <Button icon={<UploadOutlined />}>Chọn file mới</Button>
          </Upload>
        </Form.Item>

        <Form.Item
          name="collectionUnit"
          label="Đơn vị thu thập"
          rules={[
            { required: true, message: "Vui lòng chọn đơn vị thu thập!" },
          ]}
        >
          <Select
            placeholder="Chọn đơn vị thu thập"
            showSearch
            optionFilterProp="children"
            filterOption={(input, option) =>
              (option?.children as unknown as string)
                ?.toLowerCase()
                .includes(input.toLowerCase())
            }
          >
            {collectionUnits.map((unit) => (
              <Option key={unit._id} value={unit._id}>
                {unit.name}
              </Option>
            ))}
          </Select>
        </Form.Item>

        <Form.Item
          name="collectionDate"
          label="Ngày thu thập"
          rules={[{ required: true, message: "Vui lòng chọn ngày thu thập!" }]}
        >
          <DatePicker style={{ width: "100%" }} format="DD/MM/YYYY" />
        </Form.Item>

        <Form.Item name="description" label="Mô tả">
          <Input.TextArea rows={3} placeholder="Mô tả về mã độc" />
        </Form.Item>

        <Form.Item>
          <Space>
            <Button type="primary" htmlType="submit">
              Cập nhật
            </Button>
            <Button onClick={handleCancel}>Hủy</Button>
          </Space>
        </Form.Item>
      </Form>
    </Modal>
  );
};

export default UpdateMalwareModal;
